{"version":3,"sources":["component/Table.module.css","component/Input.js","component/Inputs.js","component/EditButtons.js","component/Table.js","component/axios-instance.js","component/TableContainer.js","App.js","index.js"],"names":["module","exports","Input","props","useState","data","value","setValue","className","s","table_input","onChange","event","target","onBlur","toCollectEditRecords","nameValue","id","item","Inputs","arrInputs","i","push","_id","table_Inputs","EditButtons","Edit","onClick","setEditMode","recordsEdit","length","map","updateRecords","Table","arr2","users","arr","Math","floor","random","firstName","lastName","arrButtonsDelete","forEach","deleteRecord","arrButtonsEdit","table_content","table_container","table","onSubmit","e","preventDefault","putRecords","table_formInput","name","placeholder","form_btn","table_btns","instance","axios","create","baseURL","Api","get","then","res","put","getOne","delete","update","post","TableContainer","records","setRecord","setEditRecord","useEffect","getRecords","record","obj","filter","trim","reset","alert","catch","console","log","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5f3d803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_container\":\"Table_table_container__3yJTE\",\"table_btns\":\"Table_table_btns__3__yz\",\"table_content\":\"Table_table_content__3Ph88\",\"form_btn\":\"Table_form_btn__1pOS1\",\"table_formInput\":\"Table_table_formInput__ZC8tS\",\"table\":\"Table_table__2-8w_\"};","import React from \"react\";\r\nimport { useState } from 'react';\r\nimport s from \"./Table.module.css\"\r\nconst Input = (props) => {\r\n    const [value, setValue] = useState(props.data);\r\n\r\n    function handleChange(event) {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return <td><input className={s.table_input} value={value}\r\n        onChange={handleChange}\r\n        onBlur={() => props.toCollectEditRecords(props.nameValue, props.id, value, props.item)} />\r\n    </td>\r\n\r\n}\r\nexport default Input","import React from \"react\";\r\nimport s from \"./Table.module.css\"\r\nimport { useState } from 'react';\r\nimport Input from \"./Input\";\r\nconst Inputs = (props) => {\r\n\r\n    let arrInputs = [];\r\n    for (let i in props.item.data) {\r\n        arrInputs.push(<Input nameValue={i} id={props.item._id} data={props.item.data[i]} item={props.item} toCollectEditRecords={props.toCollectEditRecords} />)\r\n    }\r\n\r\n    return <tr className={s.table_Inputs} id={props.item._id}>{arrInputs}</tr>\r\n}\r\nexport default Inputs","import React from \"react\";\r\nconst EditButtons = (props) => {\r\n    return (\r\n        props.Edit != props.id\r\n            ? <button onClick={() => props.setEditMode(props.id)}>Edit</button>\r\n            : <button onClick={() => {\r\n                (props.recordsEdit.length > 0 ?\r\n                    props.recordsEdit.map(item => {\r\n                        props.updateRecords(item._id, item)\r\n                        props.setEditMode(\"\")\r\n                    }) : props.setEditMode(\"\"))\r\n            }}>Save</button>\r\n    )\r\n}\r\nexport default EditButtons","import * as React from 'react';\r\nimport s from \"./Table.module.css\"\r\nimport Inputs from './Inputs';\r\nimport EditButtons from './EditButtons';\r\nimport { useState } from 'react';\r\nconst Table = (props) => {\r\n\r\n    const [Edit, setEditMode] = useState(\"\");\r\n    let arr2 = [];\r\n    props.users.map(item => {\r\n        let arr = [];\r\n        for (let i in item.data) {\r\n            arr.push(\r\n                <td key={`${item._id}` + Math.floor(Math.random() * 10000000000000)}>\r\n                    {item.data[i]}\r\n                </td>\r\n            )\r\n        }\r\n\r\n        arr2.push(Edit == item._id ?\r\n            <Inputs item={item} toCollectEditRecords={props.toCollectEditRecords} />\r\n            : <tr key={`${item._id}` + item.data.firstName + item.data.lastName}>\r\n                {arr}\r\n            </tr>\r\n        )\r\n    })\r\n\r\n\r\n    let arrButtonsDelete = [];\r\n    props.users.forEach(item => {\r\n        arrButtonsDelete.push(<button onClick={() => props.deleteRecord(item._id)}>Delete</button>)\r\n    })\r\n    let arrButtonsEdit = [];\r\n    props.users.map(item => {\r\n        arrButtonsEdit.push(<EditButtons recordsEdit={props.recordsEdit}\r\n            Edit={Edit}\r\n            setEditMode={setEditMode}\r\n            item={item}\r\n            id={item._id}\r\n            updateRecords={props.updateRecords}\r\n        />)\r\n    })\r\n\r\n    return (\r\n        <div className={s.table_content}>\r\n            <div className={s.table_container}>\r\n                <table className={s.table}>\r\n                    <thead><tr><th>First Name</th><th>Last Name</th><th>Phone</th><th>Age</th></tr></thead>\r\n                    <tbody> {arr2}</tbody>\r\n                </table>\r\n                <form onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    props.putRecords(e)\r\n                }}>\r\n                    <div className={s.table_formInput}>\r\n                        <input name=\"FirstName\" id=\"1\" placeholder='Enter first name' />\r\n                        <input name=\"LastName\" placeholder='Enter last name' />\r\n                        <input name=\"Phone\" placeholder='Enter your phone' />\r\n                        <input name=\"Age\" placeholder='Enter age' />\r\n                    </div>\r\n\r\n                    <div className={s.form_btn}><button>Add Records</button></div>\r\n                </form>\r\n            </div>\r\n            <div className={s.table_btns}>{arrButtonsDelete}</div>\r\n            <div className={s.table_btns}>{arrButtonsEdit}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"http://178.128.196.163:3000/api/records\",\r\n\r\n})\r\n\r\nconst Api = {\r\n    get() {\r\n        return instance.get(``).then((res) => res);\r\n    },\r\n    put(data) {\r\n        return instance.put(``, { data }).then((res) => res);\r\n    },\r\n    getOne(id) {\r\n        return instance.get(`/${id}`).then((res) => {\r\n            return res.data;\r\n        });\r\n    },\r\n    delete(id) {\r\n        return instance.delete(`/${id}`).then((res) => {\r\n            return res;\r\n        });\r\n    },\r\n    update(id, data) {\r\n        return instance.post(`/${id}`, { ...data }).then((res) => {\r\n            return res;\r\n        });\r\n    },\r\n};\r\nexport default Api;\r\n","import React from \"react\"\r\nimport Table from \"./Table\";\r\nimport Api from \"./axios-instance\";\r\nimport { useState, useEffect } from 'react';\r\nconst TableContainer = () => {\r\n    const [records, setRecord] = useState([]);\r\n    const [recordsEdit, setEditRecord] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (records.length < 1) {\r\n            getRecords();\r\n        }\r\n    });\r\n\r\n    const getRecords = () => {\r\n        Api.get().then((res) => {\r\n            setRecord([...records, ...res.data])\r\n        })\r\n    }\r\n\r\n    const updateRecords = (id, data) => {\r\n        Api.update(id, data).then(() => {\r\n            setRecord(records.map((item, i) => {\r\n                if (item._id == data._id) {\r\n                    return { ...item, ...data }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n            )\r\n        }).then(() => setEditRecord([])).catch(e => console.log(e))\r\n    }\r\n\r\n    const toCollectEditRecords = (name, id, data, record) => {\r\n        if (recordsEdit.length > 0) {\r\n            recordsEdit.map((item) => {\r\n                if (item._id == id) {\r\n                    let obj = {\r\n                        _id: id, data: { ...item.data, [name]: data }\r\n                    }\r\n                    setEditRecord([...recordsEdit, obj])\r\n                }\r\n            });\r\n        } else {\r\n            let obj = {\r\n                _id: id, data: { ...record.data, [name]: data }\r\n            }\r\n            setEditRecord([...recordsEdit, obj])\r\n        }\r\n    }\r\n\r\n    const putRecords = (e) => {\r\n        if (e.target[\"FirstName\"].value.trim().length > 0 || e.target[\"LastName\"].value.trim().length > 0 || e.target[\"Phone\"].value.trim().length > 0 || e.target[\"Age\"].value.trim().length > 0) {\r\n            let data = {\r\n                \"firstName\": `${e.target[\"FirstName\"].value}`,\r\n                \"lastName\": `${e.target[\"LastName\"].value}`,\r\n                \"phone\": `${e.target[\"Phone\"].value}`,\r\n                \"age\": `${e.target[\"Age\"].value}`\r\n            }\r\n\r\n            Api.put(data).then((res) => {\r\n                e.target.reset()\r\n                let id = res.data._id;\r\n                Api.getOne(id).then(res => setRecord([...records, res]))\r\n            })\r\n        } else {\r\n            alert(\"Поля ввода не должны быть пусты\")\r\n        }\r\n    }\r\n\r\n    const deleteRecord = (id) => {\r\n        Api.delete(id).then(() => {\r\n            setRecord([...records.filter((item) => !item._id == id)])\r\n        })\r\n    }\r\n\r\n    return <Table\r\n        toCollectEditRecords={toCollectEditRecords}\r\n        deleteRecord={deleteRecord}\r\n        getRecords={getRecords}\r\n        putRecords={putRecords}\r\n        updateRecords={updateRecords}\r\n        users={records}\r\n        recordsEdit={recordsEdit}\r\n    />\r\n\r\n}\r\nexport default TableContainer","import React, { Component } from 'react';\r\nimport TableContainer from \"./component/TableContainer\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TableContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}